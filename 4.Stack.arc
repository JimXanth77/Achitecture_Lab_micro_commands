MICRO
c    ACC=aaaa, PC=0100, BR=0011, SP=1111, LR=1100
m00 00000 000 000 111 000 011 0000 0100 00 0 1 1 1 0 1 0 1 1 1	// Bootstrap
m01 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 0 0 0 0
m02 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >>>> ## Begin of : LOADBR #K 
m03 00000 000 000 111 000 011 0000 0011 00 0 1 1 0 0 1 1 1 0 1  >>  
m04 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >>
m05 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 0 0 0 0  >>>> ## End of : LOADBR #K 
m06 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >>>> ## Begin of : LOADSP #K 
m07 00000 000 000 111 000 011 0000 1111 00 0 1 1 0 0 1 1 1 0 1  >>  
m08 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >>
m09 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 0 0 0 0  >>>> ## End of : LOADSP #K 
m0a 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >>>> ## Begin of : LOADLR #K 
m0b 00000 000 000 111 000 011 0000 1100 00 0 1 1 0 0 1 1 1 0 1  >>  
m0c 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >>
m0d 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 0 0 0 0  >>>> ## End of : LOADLR #K
m0e 00000 000 000 001 010 001 1100 1111 00 0 1 1 0 1 1 1 1 1 1  >>>> LR – SP, MSTATUSCLK ## Begin of : PUSH $K
m0f 01001 101 011 000 000 001 0000 0000 00 0 1 1 0 0 1 1 1 1 1  >> IF Z==1 JMP + offset=9
m10 00000 000 000 101 001 011 1111 1111 01 0 1 1 0 0 1 1 1 1 0  >> SP--
m11 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m12 00000 000 000 111 000 001 0000 0000 00 0 1 1 1 0 1 1 1 0 1  >> MDR + 0 -> MAR
m13 00000 000 000 111 000 011 0000 0001 00 0 1 1 0 0 1 1 1 0 1  >> MDR + 0 -> X = Reg_1
m14 00000 000 000 100 000 001 1111 0000 00 0 1 1 1 0 1 1 1 0 1  >> SP + 0 -> MAR
m15 00000 000 000 100 000 001 0001 0000 00 0 1 0 0 0 1 1 1 1 1  >> X + 0 -> MDR, MWE~ 
m16 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m17 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >> Next(PC)
m18 00000 000 000 101 000 011 0100 0100 10 0 1 1 1 0 1 1 1 1 0  >> PC += 2
m19 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >>>> Next(PC)  ## End of : PUSH $k
m1a 00000 000 000 001 001 001 0011 1111 00 0 1 1 0 1 1 1 1 1 1  >>>> SP - BR, MSTATUSCLK ## Begin of : POP $K
m1b 01001 101 011 000 000 001 0000 0000 00 0 1 1 0 0 1 1 1 1 1  >> IF Z==1 JMP + offset=9
m1c 00000 000 000 100 000 001 1111 0000 00 0 1 1 1 0 1 1 1 0 1  >> SP + 0 -> MAR
m1d 00000 000 000 111 000 011 0000 0001 00 0 1 1 0 0 1 1 1 0 1  >> MDR + 0 -> X = Reg_1
m1e 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m1f 00000 000 000 111 000 001 0000 0000 00 0 1 1 1 0 1 1 1 0 1  >> MDR + 0 -> MAR
m20 00000 000 000 100 000 001 0001 0000 00 0 1 0 0 0 1 1 1 1 1  >> X + 0 -> MDR, MWE~
m21 00000 000 000 101 000 011 1111 1111 01 0 1 1 0 0 1 1 1 1 0  >> SP++
m22 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m23 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >> Next(PC)
m24 00000 000 000 101 000 011 0100 0100 10 0 1 1 1 0 1 1 1 1 0  >> PC += 2
m25 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >>>> Next(PC)  ## End of : POP $k
m26 00000 000 000 001 010 001 0011 1111 00 0 1 1 0 1 1 1 1 1 1  >>>> BR – SP, MSTATUSCLK ## Begin of : ADD
m27 01001 101 011 000 000 001 0000 0000 00 0 1 1 0 0 1 1 1 1 1  >> IF Z==1 JMP + offset=9
m28 00000 000 000 100 000 001 1111 0000 00 0 0 1 1 0 1 0 1 0 0  >> SP + 0 -> MAR
m29 00000 000 000 111 000 011 0000 1001 00 0 1 1 0 0 1 1 1 0 1  >> MDR + 0 -> X
m2a 00000 000 000 101 000 011 1111 1111 01 0 1 1 1 0 1 1 1 1 0  >> SP++
m2b 00000 000 000 001 010 001 0011 1111 00 0 1 1 0 1 1 1 1 1 1  >> BR – SP, MSTATUSCLK
m2c 00100 101 011 000 000 001 0000 0000 00 0 1 1 0 0 1 1 1 1 1  >> IF Z==1 JMP + offset=4
m2d 00000 000 000 100 000 001 1111 0000 00 0 0 1 1 0 1 0 1 0 0  >> SP + 0 -> MAR
m2e 00000 000 000 101 000 011 1001 1001 00 0 1 1 0 0 1 1 1 0 1  >> MDR + X -> X
m2f 00000 000 000 100 000 001 1001 0000 00 0 0 0 0 0 1 0 1 0 0  >> X + 0 -> MAR,SP, MWE~
m30 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m31 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >>>> Next(PC)  ## End of : ADD
m32 00000 000 000 001 010 001 0011 1111 00 0 1 1 0 1 1 1 1 1 1  >>>> BR – SP, MSTATUSCLK ## Begin of : SUB
m33 01001 101 011 000 000 001 0000 0000 00 0 1 1 0 0 1 1 1 1 1  >> IF Z==1 JMP + offset=9
m34 00000 000 000 100 000 001 1111 0000 00 0 0 1 1 0 1 0 1 0 0  >> SP + 0 -> MAR
m35 00000 000 000 111 000 011 0000 1001 00 0 1 1 0 0 1 1 1 0 1  >> MDR + 0 -> X
m36 00000 000 000 101 000 011 1111 1111 01 0 1 1 1 0 1 1 1 1 0  >> SP++
m37 00000 000 000 001 010 001 0011 1111 00 0 1 1 0 1 1 1 1 1 1  >> BR – SP, MSTATUSCLK
m38 00100 101 011 000 000 001 0000 0000 00 0 1 1 0 0 1 1 1 1 1  >> IF Z==1 JMP + offset=4
m39 00000 000 000 100 000 001 1111 0000 00 0 0 1 1 0 1 0 1 0 0  >> SP + 0 -> MAR
m3a 00000 000 000 101 010 011 1001 1001 00 0 1 1 0 0 1 1 1 0 1  >> MDR - X -> X
m3b 00000 000 000 100 000 001 1001 0000 00 0 0 0 0 0 1 0 1 0 0  >> X + 0 -> MAR,SP, MWE~
m3c 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m3d 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >>>> Next(PC)  ## End of : SUB

MAPPER

m00 02  >> LOADBR #K 
m01 06  >> LOADSP #K 
m02 0a  >> LOADLR #K 
m03 0e  >> PUSH $K
m04 1a  >> POP $k
m05 26  >> ADD 
m06 32  >> SUB

MAIN

m00 00  >> opcode LOADBR #K 
m01 28  >> operand LOADBR #K 
m02 01  >> opcode LOADSP #K 
m03 28  >> operand LOADSP #K
m04 02  >> opcode LOADLR #K 
m05 19  >> operand LOADLR #K
m06 03  >> opcode PUSH $K  push X
m07 f0  >> operand PUSH $K
m08 03  >> opcode PUSH $K  push Y
m09 f1  >> operand PUSH $K
m0a 06  >> SUB x - y
m0b 03  >> opcode PUSH $K  push Z
m0c f2  >> operand PUSH $K
m0d 05  >> ADD (x - y) + z
m0e 04  >> opcode POP
m0f f3  >> operand POP $k

c STACK REGION
m20 00
m21 00
m22 00
m23 00
m24 00
m25 00
m26 00
m27 00
c Data Segment
mf0 05 X
mf1 05 Y
mf2 10 Z
mf3 00 RESULT