MICRO
m00 00000 000 000 111 000 011 0000 0100 00 0 1 1 1 0 1 0 1 1 1	// Bootstrap
m01 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 0 0 0 0

m02 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >>>> PC++ >> BEGIN OF LDA $K
m03 00000 000 000 111 000 001 0000 0000 00 0 0 1 1 0 1 1 1 0 1  >> MDR + 0 -> NOP, MAR
m04 00000 000 000 111 000 011 0000 1111 00 0 1 1 0 0 1 1 1 0 1  >> MDR + 0 -> ACC
m05 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m06 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >>>> NEXT(PC) >> END OF LDA $K

m07 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >>>> PC++ >> BEGIN OF STA $K
m08 00000 000 000 111 000 001 0000 0000 00 0 0 1 1 0 1 1 1 0 1  >> MDR + 0 -> NOP, MAR
m09 00000 000 000 100 000 001 1111 0000 00 0 1 0 0 0 1 1 1 0 1  >> ACC + 0 -> NOP, MWE
m0a 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m0b 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >>>> NEXT(PC) >> END OF STA $K

m0c 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >>>> PC++ >> BEGIN OF MVI R, #K
m0d 00000 000 000 111 000 011 0000 1000 00 0 1 1 0 0 1 1 1 0 1  >> MDR + 0 ->X (noumero R)

m0e 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m0f 00000 000 000 111 000 011 0000 1001 00 0 1 1 0 0 1 1 1 0 1  >> MDR + 0 ->Y
m10 00000 000 000 100 000 001 1000 0000 00 0 1 1 0 0 1 1 1 1 0  >> X + 0 -> NOP
m11 00000 000 000 100 000 011 1001 0000 00 0 0 1 0 0 1 1 1 1 1  >> Y+0->Bport
m12 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m13 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >>>> NEXT(PC) >> END OF MVI R, #K

m14 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >>>> PC++ >> BEGIN OF MOV R1, R2

m15 00000 000 000 111 000 011 0000 1000 00 0 1 1 0 0 1 1 1 0 1  >> MDR + 0 -> X(noumero R1)

m16 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m17 00000 000 000 111 000 001 0000 0000 00 0 1 1 0 0 1 1 1 0 1  >> MDR + 0 -> NOP  (noumero R2)

m18 00000 000 000 011 000 000 0000 0000 00 0 0 1 0 0 1 1 1 1 0  >> Bport + 0 -> Q (periexomeno R2)

m19 00000 000 000 100 000 001 1000 0000 00 0 1 1 0 0 1 1 1 1 0  >> X + 0 -> NOP

m1a 00000 000 000 010 000 011 0000 0000 00 0 0 1 0 0 1 1 1 1 1  >> Q + 0 -> Bport  

m1b 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m1c 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >>>> NEXT(PC) >> END OF MOV R1, R2

m1d 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >>>> PC++ >> BEGIN OF MOV R, M

m1e 00000 000 000 111 000 011 0000 1000 00 0 1 1 0 0 1 1 1 0 1  >> MDR + 0 -> X

m1f 00000 000 000 100 000 001 0111 0000 00 0 1 1 1 0 1 1 1 1 1  >> L + 0 -> MAR (MARCLOCK)
m20 00000 000 000 100 000 001 1000 0000 00 0 1 1 0 0 1 1 1 1 0  >> X + 0 -> NOP
m21 00000 000 000 111 000 011 0000 0000 00 0 0 1 0 0 1 1 1 0 1  >> MDR + 0 -> Bport 
m22 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m23 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >>>> NEXT(PC)

m24 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >>>> PC++ >> BEGIN OF MOV M, R
m25 00000 000 000 111 000 011 0000 1000 00 0 1 1 0 0 1 1 1 0 1  >> MDR + 0 -> X (R)
m26 00000 000 000 100 000 001 0111 0000 00 0 1 1 1 0 1 1 1 0 1  >> L + 0 -> MAR
m27 00000 000 000 100 000 001 1000 0000 00 0 1 0 0 0 1 1 1 1 1  >> X + 0 -> NOP
m28 00000 000 000 011 000 011 0000 0000 00 0 0 0 0 0 1 1 1 1 1  >> Selb=0, Bport+0 -> MWE~
m29 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m2a 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >>>> Next(PC) >> END OF MOV M, R

m2b 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >>>> PC++ >> BEGIN OF INR R
m2c 00000 000 000 111 000 011 0000 1000 00 0 1 1 0 0 1 1 1 0 1  >> MDR + 0 -> X
m2d 00000 000 000 100 000 001 1000 0000 00 0 1 1 0 0 1 1 1 1 0  >> X + 0 -> NOP
m2e 00000 000 000 011 000 000 0000 0000 00 0 0 1 0 0 1 1 1 1 0  >> Bport + 0 -> Q (R's value)
m2f 00000 000 000 100 000 001 1000 0000 00 0 1 1 0 0 1 1 1 1 0  >> X + 0 -> NOP
m30 00000 000 000 110 000 011 0000 0000 01 0 0 1 0 0 1 1 1 1 0  >> Q + 1 -> Bport
m31 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m32 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >>>> Next(PC) >> END OF INR R

m33 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >>>> PC++ >> BEGIN OF INX RP
m34 00000 000 000 111 000 011 0000 1000 00 0 1 1 0 0 1 1 1 0 1  >> MDR + 0 -> X (R1)
m35 00000 000 000 100 000 001 1000 0000 00 0 1 1 0 0 1 1 1 1 0  >> X + 0 -> NOP
m36 00000 000 000 011 000 011 0000 1001 00 0 0 1 0 0 1 1 1 1 1  >> Bport + 0 -> Y (R1's value)
m37 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m38 00000 000 000 111 000 001 0000 0000 00 0 1 1 0 0 1 1 1 0 1  >> MDR + 0 -> Z (R2)
m39 00000 000 000 100 000 001 1010 0000 00 0 1 1 0 0 1 1 1 1 0  >> Z + 0 -> NOP
m3a 00000 000 000 011 000 011 0000 1001 00 0 0 1 0 0 1 1 1 1 1  >> Bport + 0 -> W (R2's value)
m3b 00000 000 000 100 000 001 1010 0000 00 0 1 1 0 0 1 1 1 1 1  >> Z + 0 -> NOP
m3c 00000 000 000 101 000 011 1011 0000 01 0 0 1 1 0 1 1 1 1 0  >> W + 1 -> Bport
m3d 00000 000 000 100 000 011 1001 1001 00 0 1 1 0 0 1 1 0 1 1  >> Y + 0 -> Y, CARRYE~
m3e 00000 000 000 100 000 001 1000 0000 00 0 1 1 0 0 1 1 1 1 0  >> X + 0 -> NOP
m3f 00000 000 000 100 000 011 1001 0000 00 0 0 1 1 0 1 1 1 1 1  >> Y + 0 -> Bport
m40 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m41 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >>>> Next(PC) >> END OF INX RP

m42 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >>>> PC++ >> BEGIN OF CMP R
m43 00000 000 000 111 000 001 0000 0000 00 0 1 1 0 0 1 1 1 0 1  >> MDR + 0 -> NOP
m44 00000 000 000 001 010 001 1111 0000 00 0 0 1 1 1 1 1 1 1 0  >> ACC - Bport -> NOP, MSTATUS
m45 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m46 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >>>> Next(PC) >> END OF CMP R

m47 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >>>> PC++ >> BEGIN OF CMP M
m48 00000 000 000 100 000 001 0111 0000 00 0 1 1 1 0 1 1 1 0 1  >> L + 0 -> MAR
m49 00000 000 000 101 001 001 1111 0000 00 0 1 1 1 1 1 1 1 0 1  >> ACC - MDR -> NOP, MSTATUS
m4a 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m4b 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >>>> Next(PC) >> END OF CMP M

m4c 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >>>> PC++ >> BEGIN OF CPI #K
m4d 00000 000 000 101 001 001 0000 0000 00 0 1 1 1 1 1 1 1 0 1  >> ACC - MDR -> NOP, MSTATUS
m4e 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m4f 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >>>> Next(PC) >> END OF CPI #K

m50 00011 011 011 000 000 001 0000 0000 00 0 1 1 0 0 1 1 1 1 1  >>>> IF Z==1 JMP + 3 >> BEGIN OF JZ $K
m51 00000 000 000 101 000 011 0100 0100 10 0 1 1 1 0 1 1 1 1 0  >> PC+2
m52 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >> Next(PC)
m53 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m54 00000 000 000 111 000 011 0000 0100 00 0 1 1 1 0 1 1 1 0 1  >> MDR + 0 -> PC 
m55 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >>>> Next(PC) >> END OF JZ $K

m56 00100 011 011 000 000 001 0000 0000 00 0 1 1 0 0 1 1 1 1 1  >>>> IF Z==1 JMP + 4 >> BEGIN OF JNZ $K
m57 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m58 00000 000 000 111 000 011 0000 0100 00 0 1 1 1 0 1 1 1 0 1  >> MDR + 0 -> PC
m59 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >> Next(PC)
m5a 00000 000 000 101 000 011 0100 0100 10 0 1 1 1 0 1 1 1 1 0  >> PC+2
m5b 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >>>> Next(PC) >> END OF JNZ $K 

m5c 00100 011 000 000 000 001 0000 0000 00 0 1 1 0 0 1 1 1 1 1  >>>> IF (C==1) offset=4 >> BEGIN OF JNC $K
m5d 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m5e 00000 000 000 111 000 011 0000 0100 00 0 1 1 1 0 1 1 1 0 1  >> MDR + 0 -> PC
m5f 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >> Next(PC)
m60 00000 000 000 101 000 011 0100 0100 10 0 1 1 1 0 1 1 1 1 0  >> PC+2
m61 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >>>> NEXT(PC) >> END OF JNC $K

m62 00011 011 000 000 000 001 0000 0000 00 0 1 1 0 0 1 1 1 1 1  >>>> IF (C==1) offset=3 >> BEGIN OF JC $K
m63 00000 000 000 101 000 011 0100 0100 10 0 1 1 1 0 1 1 1 1 0  >> PC+2
m64 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >> NEXT(PC)
m65 00000 000 000 101 000 011 0100 0100 01 0 1 1 1 0 1 1 1 1 0  >> PC++
m66 00000 000 000 111 000 011 0000 0100 00 0 1 1 0 0 1 1 1 0 1  >> MDR + 0 -> PC 
m67 00000 000 000 000 000 001 0000 0000 00 0 0 1 0 0 0 1 1 1 1  >>>> Next(PC) >> END OF JC $K

m68 00000 000 000 100 000 011 0100 0100 00 0 0 1 0 0 1 1 1 1 1  >> PC + 0 -> PC ## HALT
m69 00000 000 000 001 000 001 0000 0000 00 0 1 1 0 0 0 1 1 1 1  >> Next(PC)

MAPPER
m00 02 LDA $K
m01 07 STA $K
m02 0c MVI R, #K
m03 14 MOV R1, R2
m04 1d MOV R, M
m05 24 MOV M, R
m06 2b INR R
m07 33 INX RP
m08 42 CMP R
m09 47 CMP M
m0a 4c CPI #K
m0b 50 JZ $K 
m0c 56 JNZ $K
m0d 62 JC $K
m0e 5c JNC $K
m0f 68 HALT

MAIN
m00 00 opcode LDA // X = f0 mexri Y = f9
m01 ef
m02 02 opcode MVI
m03 02 C
m04 00
m05 02 MVI
m06 07 L
m07 f0
m08 04 MOV R, M
m09 01 B
m0a 08 CMP R
m0b 02 C
m0c 0b JZ
m0d 14
m0e 06 INR C
m0f 02 //C
m10 06 INR L
m11 07 //H
m12 0c JNZ
m13 08
m14 03 MOV ACC, B
m15 0f ACC
m16 01 B
m17 01 STA
m18 fa
m19 0f HALT
mef 04
mf0 00
mf1 01
mf2 04
mf3 09
mf4 10
mf5 19
mf6 24
mf7 31
mf8 40
mf9 51
mfa 00